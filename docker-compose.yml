version: '3'
services:
  user-service:
    image: user-service
    container_name: us-cargo
    ports:
      - 8041:8041
    depends_on:
      - db_mysql
    networks:
      - back

  algorithm-service:
    image: algorithm-service
    container_name: as-cargo
    ports:
      - 9041:9041
    depends_on:
      - db_mysql
      - db_neo4j
    networks:
      - back

  db_mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_DATABASE: cargo_users
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: CargoUsers
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS cargo_users; CREATE DATABASE IF NOT EXISTS cargo_transports;' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    ports:
      - 3306:3306
    networks:
      - back

  db_neo4j:
    image: neo4j2 #:3.5.4-enterprise
    #    hostname: neo4j
    #    restart: unless-stopped
    container_name: neo4j
    ports:
      - "7473:7473"
      - "7474:7474"
      - "7687:7687"
   # volumes:
   #   - ./test-plugins:/plugins
   #   - ./data:/import
    environment:
      - NEO4J_AUTH=neo4j/Graph1
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
    networks:
      - back

  front:
    image: cargo-front
    container_name: ui-cargo
#    volumes:
#      - .:/app
#      - /app/node_modules
#    environment:
#      - CI=true
#      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
#      tty: true
    ports:
      - 3000:3000
#    networks:
#      - back

networks:
  back:
    driver: bridge
